<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.java158.hrclient.mapper.SalaryGrantMapper" >
  <resultMap id="BaseResultMap" type="com.java158.hr.entity.SalaryGrant" >
    <id column="sgr_id" property="sgrId" jdbcType="SMALLINT" />
    <result column="salary_grant_id" property="salaryGrantId" jdbcType="VARCHAR" />
    <result column="salary_standard_id" property="salaryStandardId" jdbcType="VARCHAR" />
    <result column="first_kind_id" property="firstKindId" jdbcType="CHAR" />
    <result column="first_kind_name" property="firstKindName" jdbcType="VARCHAR" />
    <result column="second_kind_id" property="secondKindId" jdbcType="CHAR" />
    <result column="second_kind_name" property="secondKindName" jdbcType="VARCHAR" />
    <result column="third_kind_id" property="thirdKindId" jdbcType="CHAR" />
    <result column="third_kind_name" property="thirdKindName" jdbcType="VARCHAR" />
    <result column="human_amount" property="humanAmount" jdbcType="SMALLINT" />
    <result column="salary_standard_sum" property="salaryStandardSum" jdbcType="DOUBLE" />
    <result column="salary_paid_sum" property="salaryPaidSum" jdbcType="DOUBLE" />
    <result column="register" property="register" jdbcType="VARCHAR" />
    <result column="regist_time" property="registTime" jdbcType="TIMESTAMP" />
    <result column="checker" property="checker" jdbcType="VARCHAR" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="check_status" property="checkStatus" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sgr_id, salary_grant_id, salary_standard_id, first_kind_id, first_kind_name, second_kind_id, 
    second_kind_name, third_kind_id, third_kind_name, human_amount, salary_standard_sum, 
    salary_paid_sum, register, regist_time, checker, check_time, check_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.java158.hr.entity.SalaryGrantExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from salary_grant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    from salary_grant
    where sgr_id = #{sgrId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from salary_grant
    where sgr_id = #{sgrId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.java158.hr.entity.SalaryGrantExample" >
    delete from salary_grant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.java158.hr.entity.SalaryGrant" >
    insert into salary_grant (sgr_id, salary_grant_id, salary_standard_id, 
      first_kind_id, first_kind_name, second_kind_id, 
      second_kind_name, third_kind_id, third_kind_name, 
      human_amount, salary_standard_sum, salary_paid_sum, 
      register, regist_time, checker, 
      check_time, check_status)
    values (#{sgrId,jdbcType=SMALLINT}, #{salaryGrantId,jdbcType=VARCHAR}, #{salaryStandardId,jdbcType=VARCHAR}, 
      #{firstKindId,jdbcType=CHAR}, #{firstKindName,jdbcType=VARCHAR}, #{secondKindId,jdbcType=CHAR}, 
      #{secondKindName,jdbcType=VARCHAR}, #{thirdKindId,jdbcType=CHAR}, #{thirdKindName,jdbcType=VARCHAR}, 
      #{humanAmount,jdbcType=SMALLINT}, #{salaryStandardSum,jdbcType=DOUBLE}, #{salaryPaidSum,jdbcType=DOUBLE}, 
      #{register,jdbcType=VARCHAR}, #{registTime,jdbcType=TIMESTAMP}, #{checker,jdbcType=VARCHAR}, 
      #{checkTime,jdbcType=TIMESTAMP}, #{checkStatus,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.java158.hr.entity.SalaryGrant" >
    insert into salary_grant
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sgrId != null" >
        sgr_id,
      </if>
      <if test="salaryGrantId != null" >
        salary_grant_id,
      </if>
      <if test="salaryStandardId != null" >
        salary_standard_id,
      </if>
      <if test="firstKindId != null" >
        first_kind_id,
      </if>
      <if test="firstKindName != null" >
        first_kind_name,
      </if>
      <if test="secondKindId != null" >
        second_kind_id,
      </if>
      <if test="secondKindName != null" >
        second_kind_name,
      </if>
      <if test="thirdKindId != null" >
        third_kind_id,
      </if>
      <if test="thirdKindName != null" >
        third_kind_name,
      </if>
      <if test="humanAmount != null" >
        human_amount,
      </if>
      <if test="salaryStandardSum != null" >
        salary_standard_sum,
      </if>
      <if test="salaryPaidSum != null" >
        salary_paid_sum,
      </if>
      <if test="register != null" >
        register,
      </if>
      <if test="registTime != null" >
        regist_time,
      </if>
      <if test="checker != null" >
        checker,
      </if>
      <if test="checkTime != null" >
        check_time,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sgrId != null" >
        #{sgrId,jdbcType=SMALLINT},
      </if>
      <if test="salaryGrantId != null" >
        #{salaryGrantId,jdbcType=VARCHAR},
      </if>
      <if test="salaryStandardId != null" >
        #{salaryStandardId,jdbcType=VARCHAR},
      </if>
      <if test="firstKindId != null" >
        #{firstKindId,jdbcType=CHAR},
      </if>
      <if test="firstKindName != null" >
        #{firstKindName,jdbcType=VARCHAR},
      </if>
      <if test="secondKindId != null" >
        #{secondKindId,jdbcType=CHAR},
      </if>
      <if test="secondKindName != null" >
        #{secondKindName,jdbcType=VARCHAR},
      </if>
      <if test="thirdKindId != null" >
        #{thirdKindId,jdbcType=CHAR},
      </if>
      <if test="thirdKindName != null" >
        #{thirdKindName,jdbcType=VARCHAR},
      </if>
      <if test="humanAmount != null" >
        #{humanAmount,jdbcType=SMALLINT},
      </if>
      <if test="salaryStandardSum != null" >
        #{salaryStandardSum,jdbcType=DOUBLE},
      </if>
      <if test="salaryPaidSum != null" >
        #{salaryPaidSum,jdbcType=DOUBLE},
      </if>
      <if test="register != null" >
        #{register,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checker != null" >
        #{checker,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.java158.hr.entity.SalaryGrantExample" resultType="java.lang.Integer" >
    select count(*) from salary_grant
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update salary_grant
    <set >
      <if test="record.sgrId != null" >
        sgr_id = #{record.sgrId,jdbcType=SMALLINT},
      </if>
      <if test="record.salaryGrantId != null" >
        salary_grant_id = #{record.salaryGrantId,jdbcType=VARCHAR},
      </if>
      <if test="record.salaryStandardId != null" >
        salary_standard_id = #{record.salaryStandardId,jdbcType=VARCHAR},
      </if>
      <if test="record.firstKindId != null" >
        first_kind_id = #{record.firstKindId,jdbcType=CHAR},
      </if>
      <if test="record.firstKindName != null" >
        first_kind_name = #{record.firstKindName,jdbcType=VARCHAR},
      </if>
      <if test="record.secondKindId != null" >
        second_kind_id = #{record.secondKindId,jdbcType=CHAR},
      </if>
      <if test="record.secondKindName != null" >
        second_kind_name = #{record.secondKindName,jdbcType=VARCHAR},
      </if>
      <if test="record.thirdKindId != null" >
        third_kind_id = #{record.thirdKindId,jdbcType=CHAR},
      </if>
      <if test="record.thirdKindName != null" >
        third_kind_name = #{record.thirdKindName,jdbcType=VARCHAR},
      </if>
      <if test="record.humanAmount != null" >
        human_amount = #{record.humanAmount,jdbcType=SMALLINT},
      </if>
      <if test="record.salaryStandardSum != null" >
        salary_standard_sum = #{record.salaryStandardSum,jdbcType=DOUBLE},
      </if>
      <if test="record.salaryPaidSum != null" >
        salary_paid_sum = #{record.salaryPaidSum,jdbcType=DOUBLE},
      </if>
      <if test="record.register != null" >
        register = #{record.register,jdbcType=VARCHAR},
      </if>
      <if test="record.registTime != null" >
        regist_time = #{record.registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checker != null" >
        checker = #{record.checker,jdbcType=VARCHAR},
      </if>
      <if test="record.checkTime != null" >
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkStatus != null" >
        check_status = #{record.checkStatus,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update salary_grant
    set sgr_id = #{record.sgrId,jdbcType=SMALLINT},
      salary_grant_id = #{record.salaryGrantId,jdbcType=VARCHAR},
      salary_standard_id = #{record.salaryStandardId,jdbcType=VARCHAR},
      first_kind_id = #{record.firstKindId,jdbcType=CHAR},
      first_kind_name = #{record.firstKindName,jdbcType=VARCHAR},
      second_kind_id = #{record.secondKindId,jdbcType=CHAR},
      second_kind_name = #{record.secondKindName,jdbcType=VARCHAR},
      third_kind_id = #{record.thirdKindId,jdbcType=CHAR},
      third_kind_name = #{record.thirdKindName,jdbcType=VARCHAR},
      human_amount = #{record.humanAmount,jdbcType=SMALLINT},
      salary_standard_sum = #{record.salaryStandardSum,jdbcType=DOUBLE},
      salary_paid_sum = #{record.salaryPaidSum,jdbcType=DOUBLE},
      register = #{record.register,jdbcType=VARCHAR},
      regist_time = #{record.registTime,jdbcType=TIMESTAMP},
      checker = #{record.checker,jdbcType=VARCHAR},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      check_status = #{record.checkStatus,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.java158.hr.entity.SalaryGrant" >
    update salary_grant
    <set >
      <if test="salaryGrantId != null" >
        salary_grant_id = #{salaryGrantId,jdbcType=VARCHAR},
      </if>
      <if test="salaryStandardId != null" >
        salary_standard_id = #{salaryStandardId,jdbcType=VARCHAR},
      </if>
      <if test="firstKindId != null" >
        first_kind_id = #{firstKindId,jdbcType=CHAR},
      </if>
      <if test="firstKindName != null" >
        first_kind_name = #{firstKindName,jdbcType=VARCHAR},
      </if>
      <if test="secondKindId != null" >
        second_kind_id = #{secondKindId,jdbcType=CHAR},
      </if>
      <if test="secondKindName != null" >
        second_kind_name = #{secondKindName,jdbcType=VARCHAR},
      </if>
      <if test="thirdKindId != null" >
        third_kind_id = #{thirdKindId,jdbcType=CHAR},
      </if>
      <if test="thirdKindName != null" >
        third_kind_name = #{thirdKindName,jdbcType=VARCHAR},
      </if>
      <if test="humanAmount != null" >
        human_amount = #{humanAmount,jdbcType=SMALLINT},
      </if>
      <if test="salaryStandardSum != null" >
        salary_standard_sum = #{salaryStandardSum,jdbcType=DOUBLE},
      </if>
      <if test="salaryPaidSum != null" >
        salary_paid_sum = #{salaryPaidSum,jdbcType=DOUBLE},
      </if>
      <if test="register != null" >
        register = #{register,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        regist_time = #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checker != null" >
        checker = #{checker,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=SMALLINT},
      </if>
    </set>
    where sgr_id = #{sgrId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.java158.hr.entity.SalaryGrant" >
    update salary_grant
    set salary_grant_id = #{salaryGrantId,jdbcType=VARCHAR},
      salary_standard_id = #{salaryStandardId,jdbcType=VARCHAR},
      first_kind_id = #{firstKindId,jdbcType=CHAR},
      first_kind_name = #{firstKindName,jdbcType=VARCHAR},
      second_kind_id = #{secondKindId,jdbcType=CHAR},
      second_kind_name = #{secondKindName,jdbcType=VARCHAR},
      third_kind_id = #{thirdKindId,jdbcType=CHAR},
      third_kind_name = #{thirdKindName,jdbcType=VARCHAR},
      human_amount = #{humanAmount,jdbcType=SMALLINT},
      salary_standard_sum = #{salaryStandardSum,jdbcType=DOUBLE},
      salary_paid_sum = #{salaryPaidSum,jdbcType=DOUBLE},
      register = #{register,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=TIMESTAMP},
      checker = #{checker,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      check_status = #{checkStatus,jdbcType=SMALLINT}
    where sgr_id = #{sgrId,jdbcType=SMALLINT}
  </update>
</mapper>