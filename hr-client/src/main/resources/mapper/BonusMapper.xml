<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.java158.hrclient.mapper.BonusMapper" >
  <resultMap id="BaseResultMap" type="com.java158.hr.entity.Bonus" >
    <id column="bon_id" property="bonId" jdbcType="INTEGER" />
    <result column="major_kind_id" property="majorKindId" jdbcType="CHAR" />
    <result column="major_kind_name" property="majorKindName" jdbcType="VARCHAR" />
    <result column="major_id" property="majorId" jdbcType="CHAR" />
    <result column="major_name" property="majorName" jdbcType="VARCHAR" />
    <result column="human_id" property="humanId" jdbcType="VARCHAR" />
    <result column="human_name" property="humanName" jdbcType="VARCHAR" />
    <result column="bonus_item" property="bonusItem" jdbcType="VARCHAR" />
    <result column="bonus_worth" property="bonusWorth" jdbcType="DOUBLE" />
    <result column="bonus_degree" property="bonusDegree" jdbcType="VARCHAR" />
    <result column="register" property="register" jdbcType="VARCHAR" />
    <result column="checker" property="checker" jdbcType="VARCHAR" />
    <result column="regist_time" property="registTime" jdbcType="TIMESTAMP" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="check_status" property="checkStatus" jdbcType="SMALLINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.java158.hr.entity.Bonus" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bon_id, major_kind_id, major_kind_name, major_id, major_name, human_id, human_name, 
    bonus_item, bonus_worth, bonus_degree, register, checker, regist_time, check_time, 
    check_status
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.java158.hr.entity.BonusExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bonus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.java158.hr.entity.BonusExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bonus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bonus
    where bon_id = #{bonId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bonus
    where bon_id = #{bonId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.java158.hr.entity.BonusExample" >
    delete from bonus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.java158.hr.entity.Bonus" >
    insert into bonus (bon_id, major_kind_id, major_kind_name, 
      major_id, major_name, human_id, 
      human_name, bonus_item, bonus_worth, 
      bonus_degree, register, checker, 
      regist_time, check_time, check_status, 
      remark)
    values (#{bonId,jdbcType=INTEGER}, #{majorKindId,jdbcType=CHAR}, #{majorKindName,jdbcType=VARCHAR}, 
      #{majorId,jdbcType=CHAR}, #{majorName,jdbcType=VARCHAR}, #{humanId,jdbcType=VARCHAR}, 
      #{humanName,jdbcType=VARCHAR}, #{bonusItem,jdbcType=VARCHAR}, #{bonusWorth,jdbcType=DOUBLE}, 
      #{bonusDegree,jdbcType=VARCHAR}, #{register,jdbcType=VARCHAR}, #{checker,jdbcType=VARCHAR}, 
      #{registTime,jdbcType=TIMESTAMP}, #{checkTime,jdbcType=TIMESTAMP}, #{checkStatus,jdbcType=SMALLINT}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.java158.hr.entity.Bonus" >
    insert into bonus
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bonId != null" >
        bon_id,
      </if>
      <if test="majorKindId != null" >
        major_kind_id,
      </if>
      <if test="majorKindName != null" >
        major_kind_name,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="majorName != null" >
        major_name,
      </if>
      <if test="humanId != null" >
        human_id,
      </if>
      <if test="humanName != null" >
        human_name,
      </if>
      <if test="bonusItem != null" >
        bonus_item,
      </if>
      <if test="bonusWorth != null" >
        bonus_worth,
      </if>
      <if test="bonusDegree != null" >
        bonus_degree,
      </if>
      <if test="register != null" >
        register,
      </if>
      <if test="checker != null" >
        checker,
      </if>
      <if test="registTime != null" >
        regist_time,
      </if>
      <if test="checkTime != null" >
        check_time,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bonId != null" >
        #{bonId,jdbcType=INTEGER},
      </if>
      <if test="majorKindId != null" >
        #{majorKindId,jdbcType=CHAR},
      </if>
      <if test="majorKindName != null" >
        #{majorKindName,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=CHAR},
      </if>
      <if test="majorName != null" >
        #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="humanId != null" >
        #{humanId,jdbcType=VARCHAR},
      </if>
      <if test="humanName != null" >
        #{humanName,jdbcType=VARCHAR},
      </if>
      <if test="bonusItem != null" >
        #{bonusItem,jdbcType=VARCHAR},
      </if>
      <if test="bonusWorth != null" >
        #{bonusWorth,jdbcType=DOUBLE},
      </if>
      <if test="bonusDegree != null" >
        #{bonusDegree,jdbcType=VARCHAR},
      </if>
      <if test="register != null" >
        #{register,jdbcType=VARCHAR},
      </if>
      <if test="checker != null" >
        #{checker,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=SMALLINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.java158.hr.entity.BonusExample" resultType="java.lang.Integer" >
    select count(*) from bonus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bonus
    <set >
      <if test="record.bonId != null" >
        bon_id = #{record.bonId,jdbcType=INTEGER},
      </if>
      <if test="record.majorKindId != null" >
        major_kind_id = #{record.majorKindId,jdbcType=CHAR},
      </if>
      <if test="record.majorKindName != null" >
        major_kind_name = #{record.majorKindName,jdbcType=VARCHAR},
      </if>
      <if test="record.majorId != null" >
        major_id = #{record.majorId,jdbcType=CHAR},
      </if>
      <if test="record.majorName != null" >
        major_name = #{record.majorName,jdbcType=VARCHAR},
      </if>
      <if test="record.humanId != null" >
        human_id = #{record.humanId,jdbcType=VARCHAR},
      </if>
      <if test="record.humanName != null" >
        human_name = #{record.humanName,jdbcType=VARCHAR},
      </if>
      <if test="record.bonusItem != null" >
        bonus_item = #{record.bonusItem,jdbcType=VARCHAR},
      </if>
      <if test="record.bonusWorth != null" >
        bonus_worth = #{record.bonusWorth,jdbcType=DOUBLE},
      </if>
      <if test="record.bonusDegree != null" >
        bonus_degree = #{record.bonusDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.register != null" >
        register = #{record.register,jdbcType=VARCHAR},
      </if>
      <if test="record.checker != null" >
        checker = #{record.checker,jdbcType=VARCHAR},
      </if>
      <if test="record.registTime != null" >
        regist_time = #{record.registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkTime != null" >
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkStatus != null" >
        check_status = #{record.checkStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update bonus
    set bon_id = #{record.bonId,jdbcType=INTEGER},
      major_kind_id = #{record.majorKindId,jdbcType=CHAR},
      major_kind_name = #{record.majorKindName,jdbcType=VARCHAR},
      major_id = #{record.majorId,jdbcType=CHAR},
      major_name = #{record.majorName,jdbcType=VARCHAR},
      human_id = #{record.humanId,jdbcType=VARCHAR},
      human_name = #{record.humanName,jdbcType=VARCHAR},
      bonus_item = #{record.bonusItem,jdbcType=VARCHAR},
      bonus_worth = #{record.bonusWorth,jdbcType=DOUBLE},
      bonus_degree = #{record.bonusDegree,jdbcType=VARCHAR},
      register = #{record.register,jdbcType=VARCHAR},
      checker = #{record.checker,jdbcType=VARCHAR},
      regist_time = #{record.registTime,jdbcType=TIMESTAMP},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      check_status = #{record.checkStatus,jdbcType=SMALLINT},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bonus
    set bon_id = #{record.bonId,jdbcType=INTEGER},
      major_kind_id = #{record.majorKindId,jdbcType=CHAR},
      major_kind_name = #{record.majorKindName,jdbcType=VARCHAR},
      major_id = #{record.majorId,jdbcType=CHAR},
      major_name = #{record.majorName,jdbcType=VARCHAR},
      human_id = #{record.humanId,jdbcType=VARCHAR},
      human_name = #{record.humanName,jdbcType=VARCHAR},
      bonus_item = #{record.bonusItem,jdbcType=VARCHAR},
      bonus_worth = #{record.bonusWorth,jdbcType=DOUBLE},
      bonus_degree = #{record.bonusDegree,jdbcType=VARCHAR},
      register = #{record.register,jdbcType=VARCHAR},
      checker = #{record.checker,jdbcType=VARCHAR},
      regist_time = #{record.registTime,jdbcType=TIMESTAMP},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      check_status = #{record.checkStatus,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.java158.hr.entity.Bonus" >
    update bonus
    <set >
      <if test="majorKindId != null" >
        major_kind_id = #{majorKindId,jdbcType=CHAR},
      </if>
      <if test="majorKindName != null" >
        major_kind_name = #{majorKindName,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=CHAR},
      </if>
      <if test="majorName != null" >
        major_name = #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="humanId != null" >
        human_id = #{humanId,jdbcType=VARCHAR},
      </if>
      <if test="humanName != null" >
        human_name = #{humanName,jdbcType=VARCHAR},
      </if>
      <if test="bonusItem != null" >
        bonus_item = #{bonusItem,jdbcType=VARCHAR},
      </if>
      <if test="bonusWorth != null" >
        bonus_worth = #{bonusWorth,jdbcType=DOUBLE},
      </if>
      <if test="bonusDegree != null" >
        bonus_degree = #{bonusDegree,jdbcType=VARCHAR},
      </if>
      <if test="register != null" >
        register = #{register,jdbcType=VARCHAR},
      </if>
      <if test="checker != null" >
        checker = #{checker,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        regist_time = #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkTime != null" >
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=SMALLINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where bon_id = #{bonId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.java158.hr.entity.Bonus" >
    update bonus
    set major_kind_id = #{majorKindId,jdbcType=CHAR},
      major_kind_name = #{majorKindName,jdbcType=VARCHAR},
      major_id = #{majorId,jdbcType=CHAR},
      major_name = #{majorName,jdbcType=VARCHAR},
      human_id = #{humanId,jdbcType=VARCHAR},
      human_name = #{humanName,jdbcType=VARCHAR},
      bonus_item = #{bonusItem,jdbcType=VARCHAR},
      bonus_worth = #{bonusWorth,jdbcType=DOUBLE},
      bonus_degree = #{bonusDegree,jdbcType=VARCHAR},
      register = #{register,jdbcType=VARCHAR},
      checker = #{checker,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=TIMESTAMP},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      check_status = #{checkStatus,jdbcType=SMALLINT},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where bon_id = #{bonId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.java158.hr.entity.Bonus" >
    update bonus
    set major_kind_id = #{majorKindId,jdbcType=CHAR},
      major_kind_name = #{majorKindName,jdbcType=VARCHAR},
      major_id = #{majorId,jdbcType=CHAR},
      major_name = #{majorName,jdbcType=VARCHAR},
      human_id = #{humanId,jdbcType=VARCHAR},
      human_name = #{humanName,jdbcType=VARCHAR},
      bonus_item = #{bonusItem,jdbcType=VARCHAR},
      bonus_worth = #{bonusWorth,jdbcType=DOUBLE},
      bonus_degree = #{bonusDegree,jdbcType=VARCHAR},
      register = #{register,jdbcType=VARCHAR},
      checker = #{checker,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=TIMESTAMP},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      check_status = #{checkStatus,jdbcType=SMALLINT}
    where bon_id = #{bonId,jdbcType=INTEGER}
  </update>
</mapper>