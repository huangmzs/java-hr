<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.java158.hrclient.mapper.ConfigFileSecondKindMapper" >
  <resultMap id="BaseResultMap" type="com.java158.hr.entity.ConfigFileSecondKind" >
    <id column="fsk_id" property="fskId" jdbcType="SMALLINT" />
    <result column="first_kind_id" property="firstKindId" jdbcType="CHAR" />
    <result column="first_kind_name" property="firstKindName" jdbcType="VARCHAR" />
    <result column="second_kind_id" property="secondKindId" jdbcType="CHAR" />
    <result column="second_kind_name" property="secondKindName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.java158.hr.entity.ConfigFileSecondKindWithBLOBs" extends="BaseResultMap" >
    <result column="second_salary_id" property="secondSalaryId" jdbcType="LONGVARCHAR" />
    <result column="second_sale_id" property="secondSaleId" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fsk_id, first_kind_id, first_kind_name, second_kind_id, second_kind_name
  </sql>
  <sql id="Blob_Column_List" >
    second_salary_id, second_sale_id
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.java158.hr.entity.ConfigFileSecondKindExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from config_file_second_kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.java158.hr.entity.ConfigFileSecondKindExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from config_file_second_kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from config_file_second_kind
    where fsk_id = #{fskId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from config_file_second_kind
    where fsk_id = #{fskId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.java158.hr.entity.ConfigFileSecondKindExample" >
    delete from config_file_second_kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.java158.hr.entity.ConfigFileSecondKindWithBLOBs" >
    insert into config_file_second_kind (fsk_id, first_kind_id, first_kind_name, 
      second_kind_id, second_kind_name, second_salary_id, 
      second_sale_id)
    values (#{fskId,jdbcType=SMALLINT}, #{firstKindId,jdbcType=CHAR}, #{firstKindName,jdbcType=VARCHAR}, 
      #{secondKindId,jdbcType=CHAR}, #{secondKindName,jdbcType=VARCHAR}, #{secondSalaryId,jdbcType=LONGVARCHAR}, 
      #{secondSaleId,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.java158.hr.entity.ConfigFileSecondKindWithBLOBs" >
    insert into config_file_second_kind
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fskId != null" >
        fsk_id,
      </if>
      <if test="firstKindId != null" >
        first_kind_id,
      </if>
      <if test="firstKindName != null" >
        first_kind_name,
      </if>
      <if test="secondKindId != null" >
        second_kind_id,
      </if>
      <if test="secondKindName != null" >
        second_kind_name,
      </if>
      <if test="secondSalaryId != null" >
        second_salary_id,
      </if>
      <if test="secondSaleId != null" >
        second_sale_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fskId != null" >
        #{fskId,jdbcType=SMALLINT},
      </if>
      <if test="firstKindId != null" >
        #{firstKindId,jdbcType=CHAR},
      </if>
      <if test="firstKindName != null" >
        #{firstKindName,jdbcType=VARCHAR},
      </if>
      <if test="secondKindId != null" >
        #{secondKindId,jdbcType=CHAR},
      </if>
      <if test="secondKindName != null" >
        #{secondKindName,jdbcType=VARCHAR},
      </if>
      <if test="secondSalaryId != null" >
        #{secondSalaryId,jdbcType=LONGVARCHAR},
      </if>
      <if test="secondSaleId != null" >
        #{secondSaleId,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.java158.hr.entity.ConfigFileSecondKindExample" resultType="java.lang.Integer" >
    select count(*) from config_file_second_kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update config_file_second_kind
    <set >
      <if test="record.fskId != null" >
        fsk_id = #{record.fskId,jdbcType=SMALLINT},
      </if>
      <if test="record.firstKindId != null" >
        first_kind_id = #{record.firstKindId,jdbcType=CHAR},
      </if>
      <if test="record.firstKindName != null" >
        first_kind_name = #{record.firstKindName,jdbcType=VARCHAR},
      </if>
      <if test="record.secondKindId != null" >
        second_kind_id = #{record.secondKindId,jdbcType=CHAR},
      </if>
      <if test="record.secondKindName != null" >
        second_kind_name = #{record.secondKindName,jdbcType=VARCHAR},
      </if>
      <if test="record.secondSalaryId != null" >
        second_salary_id = #{record.secondSalaryId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.secondSaleId != null" >
        second_sale_id = #{record.secondSaleId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update config_file_second_kind
    set fsk_id = #{record.fskId,jdbcType=SMALLINT},
      first_kind_id = #{record.firstKindId,jdbcType=CHAR},
      first_kind_name = #{record.firstKindName,jdbcType=VARCHAR},
      second_kind_id = #{record.secondKindId,jdbcType=CHAR},
      second_kind_name = #{record.secondKindName,jdbcType=VARCHAR},
      second_salary_id = #{record.secondSalaryId,jdbcType=LONGVARCHAR},
      second_sale_id = #{record.secondSaleId,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update config_file_second_kind
    set fsk_id = #{record.fskId,jdbcType=SMALLINT},
      first_kind_id = #{record.firstKindId,jdbcType=CHAR},
      first_kind_name = #{record.firstKindName,jdbcType=VARCHAR},
      second_kind_id = #{record.secondKindId,jdbcType=CHAR},
      second_kind_name = #{record.secondKindName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.java158.hr.entity.ConfigFileSecondKindWithBLOBs" >
    update config_file_second_kind
    <set >
      <if test="firstKindId != null" >
        first_kind_id = #{firstKindId,jdbcType=CHAR},
      </if>
      <if test="firstKindName != null" >
        first_kind_name = #{firstKindName,jdbcType=VARCHAR},
      </if>
      <if test="secondKindId != null" >
        second_kind_id = #{secondKindId,jdbcType=CHAR},
      </if>
      <if test="secondKindName != null" >
        second_kind_name = #{secondKindName,jdbcType=VARCHAR},
      </if>
      <if test="secondSalaryId != null" >
        second_salary_id = #{secondSalaryId,jdbcType=LONGVARCHAR},
      </if>
      <if test="secondSaleId != null" >
        second_sale_id = #{secondSaleId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where fsk_id = #{fskId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.java158.hr.entity.ConfigFileSecondKindWithBLOBs" >
    update config_file_second_kind
    set first_kind_id = #{firstKindId,jdbcType=CHAR},
      first_kind_name = #{firstKindName,jdbcType=VARCHAR},
      second_kind_id = #{secondKindId,jdbcType=CHAR},
      second_kind_name = #{secondKindName,jdbcType=VARCHAR},
      second_salary_id = #{secondSalaryId,jdbcType=LONGVARCHAR},
      second_sale_id = #{secondSaleId,jdbcType=LONGVARCHAR}
    where fsk_id = #{fskId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.java158.hr.entity.ConfigFileSecondKind" >
    update config_file_second_kind
    set first_kind_id = #{firstKindId,jdbcType=CHAR},
      first_kind_name = #{firstKindName,jdbcType=VARCHAR},
      second_kind_id = #{secondKindId,jdbcType=CHAR},
      second_kind_name = #{secondKindName,jdbcType=VARCHAR}
    where fsk_id = #{fskId,jdbcType=SMALLINT}
  </update>
</mapper>