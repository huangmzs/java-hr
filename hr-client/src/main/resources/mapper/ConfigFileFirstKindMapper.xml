<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.java158.hrclient.mapper.ConfigFileFirstKindMapper" >
  <resultMap id="BaseResultMap" type="com.java158.hr.entity.ConfigFileFirstKind" >
    <id column="ffk_id" property="ffkId" jdbcType="SMALLINT" />
    <result column="first_kind_id" property="firstKindId" jdbcType="CHAR" />
    <result column="first_kind_name" property="firstKindName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.java158.hr.entity.ConfigFileFirstKindWithBLOBs" extends="BaseResultMap" >
    <result column="first_kind_salary_id" property="firstKindSalaryId" jdbcType="LONGVARCHAR" />
    <result column="first_kind_sale_id" property="firstKindSaleId" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ffk_id, first_kind_id, first_kind_name
  </sql>
  <sql id="Blob_Column_List" >
    first_kind_salary_id, first_kind_sale_id
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.java158.hr.entity.ConfigFileFirstKindExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from config_file_first_kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.java158.hr.entity.ConfigFileFirstKindExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from config_file_first_kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from config_file_first_kind
    where ffk_id = #{ffkId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from config_file_first_kind
    where ffk_id = #{ffkId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.java158.hr.entity.ConfigFileFirstKindExample" >
    delete from config_file_first_kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.java158.hr.entity.ConfigFileFirstKindWithBLOBs" >
    insert into config_file_first_kind (ffk_id, first_kind_id, first_kind_name, 
      first_kind_salary_id, first_kind_sale_id
      )
    values (#{ffkId,jdbcType=SMALLINT}, #{firstKindId,jdbcType=CHAR}, #{firstKindName,jdbcType=VARCHAR}, 
      #{firstKindSalaryId,jdbcType=LONGVARCHAR}, #{firstKindSaleId,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.java158.hr.entity.ConfigFileFirstKindWithBLOBs" >
    insert into config_file_first_kind
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ffkId != null" >
        ffk_id,
      </if>
      <if test="firstKindId != null" >
        first_kind_id,
      </if>
      <if test="firstKindName != null" >
        first_kind_name,
      </if>
      <if test="firstKindSalaryId != null" >
        first_kind_salary_id,
      </if>
      <if test="firstKindSaleId != null" >
        first_kind_sale_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ffkId != null" >
        #{ffkId,jdbcType=SMALLINT},
      </if>
      <if test="firstKindId != null" >
        #{firstKindId,jdbcType=CHAR},
      </if>
      <if test="firstKindName != null" >
        #{firstKindName,jdbcType=VARCHAR},
      </if>
      <if test="firstKindSalaryId != null" >
        #{firstKindSalaryId,jdbcType=LONGVARCHAR},
      </if>
      <if test="firstKindSaleId != null" >
        #{firstKindSaleId,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.java158.hr.entity.ConfigFileFirstKindExample" resultType="java.lang.Integer" >
    select count(*) from config_file_first_kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update config_file_first_kind
    <set >
      <if test="record.ffkId != null" >
        ffk_id = #{record.ffkId,jdbcType=SMALLINT},
      </if>
      <if test="record.firstKindId != null" >
        first_kind_id = #{record.firstKindId,jdbcType=CHAR},
      </if>
      <if test="record.firstKindName != null" >
        first_kind_name = #{record.firstKindName,jdbcType=VARCHAR},
      </if>
      <if test="record.firstKindSalaryId != null" >
        first_kind_salary_id = #{record.firstKindSalaryId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.firstKindSaleId != null" >
        first_kind_sale_id = #{record.firstKindSaleId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update config_file_first_kind
    set ffk_id = #{record.ffkId,jdbcType=SMALLINT},
      first_kind_id = #{record.firstKindId,jdbcType=CHAR},
      first_kind_name = #{record.firstKindName,jdbcType=VARCHAR},
      first_kind_salary_id = #{record.firstKindSalaryId,jdbcType=LONGVARCHAR},
      first_kind_sale_id = #{record.firstKindSaleId,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update config_file_first_kind
    set ffk_id = #{record.ffkId,jdbcType=SMALLINT},
      first_kind_id = #{record.firstKindId,jdbcType=CHAR},
      first_kind_name = #{record.firstKindName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.java158.hr.entity.ConfigFileFirstKindWithBLOBs" >
    update config_file_first_kind
    <set >
      <if test="firstKindId != null" >
        first_kind_id = #{firstKindId,jdbcType=CHAR},
      </if>
      <if test="firstKindName != null" >
        first_kind_name = #{firstKindName,jdbcType=VARCHAR},
      </if>
      <if test="firstKindSalaryId != null" >
        first_kind_salary_id = #{firstKindSalaryId,jdbcType=LONGVARCHAR},
      </if>
      <if test="firstKindSaleId != null" >
        first_kind_sale_id = #{firstKindSaleId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ffk_id = #{ffkId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.java158.hr.entity.ConfigFileFirstKindWithBLOBs" >
    update config_file_first_kind
    set first_kind_id = #{firstKindId,jdbcType=CHAR},
      first_kind_name = #{firstKindName,jdbcType=VARCHAR},
      first_kind_salary_id = #{firstKindSalaryId,jdbcType=LONGVARCHAR},
      first_kind_sale_id = #{firstKindSaleId,jdbcType=LONGVARCHAR}
    where ffk_id = #{ffkId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.java158.hr.entity.ConfigFileFirstKind" >
    update config_file_first_kind
    set first_kind_id = #{firstKindId,jdbcType=CHAR},
      first_kind_name = #{firstKindName,jdbcType=VARCHAR}
    where ffk_id = #{ffkId,jdbcType=SMALLINT}
  </update>
</mapper>