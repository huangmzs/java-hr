<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.java158.hrclient.mapper.SalaryStandardMapper" >
  <resultMap id="BaseResultMap" type="com.java158.hr.entity.SalaryStandard" >
    <id column="ssd_id" property="ssdId" jdbcType="SMALLINT" />
    <result column="standard_id" property="standardId" jdbcType="VARCHAR" />
    <result column="standard_name" property="standardName" jdbcType="VARCHAR" />
    <result column="designer" property="designer" jdbcType="VARCHAR" />
    <result column="register" property="register" jdbcType="VARCHAR" />
    <result column="checker" property="checker" jdbcType="VARCHAR" />
    <result column="changer" property="changer" jdbcType="VARCHAR" />
    <result column="regist_time" property="registTime" jdbcType="TIMESTAMP" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="change_time" property="changeTime" jdbcType="TIMESTAMP" />
    <result column="salary_sum" property="salarySum" jdbcType="DOUBLE" />
    <result column="check_status" property="checkStatus" jdbcType="SMALLINT" />
    <result column="change_status" property="changeStatus" jdbcType="SMALLINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.java158.hr.entity.SalaryStandardWithBLOBs" extends="BaseResultMap" >
    <result column="check_comment" property="checkComment" jdbcType="LONGVARCHAR" />
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ssd_id, standard_id, standard_name, designer, register, checker, changer, regist_time, 
    check_time, change_time, salary_sum, check_status, change_status
  </sql>
  <sql id="Blob_Column_List" >
    check_comment, remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.java158.hr.entity.SalaryStandardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from salary_standard
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.java158.hr.entity.SalaryStandardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from salary_standard
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from salary_standard
    where ssd_id = #{ssdId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from salary_standard
    where ssd_id = #{ssdId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.java158.hr.entity.SalaryStandardExample" >
    delete from salary_standard
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.java158.hr.entity.SalaryStandardWithBLOBs" >
    insert into salary_standard (ssd_id, standard_id, standard_name, 
      designer, register, checker, 
      changer, regist_time, check_time, 
      change_time, salary_sum, check_status, 
      change_status, check_comment, remark
      )
    values (#{ssdId,jdbcType=SMALLINT}, #{standardId,jdbcType=VARCHAR}, #{standardName,jdbcType=VARCHAR}, 
      #{designer,jdbcType=VARCHAR}, #{register,jdbcType=VARCHAR}, #{checker,jdbcType=VARCHAR}, 
      #{changer,jdbcType=VARCHAR}, #{registTime,jdbcType=TIMESTAMP}, #{checkTime,jdbcType=TIMESTAMP}, 
      #{changeTime,jdbcType=TIMESTAMP}, #{salarySum,jdbcType=DOUBLE}, #{checkStatus,jdbcType=SMALLINT}, 
      #{changeStatus,jdbcType=SMALLINT}, #{checkComment,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.java158.hr.entity.SalaryStandardWithBLOBs" >
    insert into salary_standard
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ssdId != null" >
        ssd_id,
      </if>
      <if test="standardId != null" >
        standard_id,
      </if>
      <if test="standardName != null" >
        standard_name,
      </if>
      <if test="designer != null" >
        designer,
      </if>
      <if test="register != null" >
        register,
      </if>
      <if test="checker != null" >
        checker,
      </if>
      <if test="changer != null" >
        changer,
      </if>
      <if test="registTime != null" >
        regist_time,
      </if>
      <if test="checkTime != null" >
        check_time,
      </if>
      <if test="changeTime != null" >
        change_time,
      </if>
      <if test="salarySum != null" >
        salary_sum,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
      <if test="changeStatus != null" >
        change_status,
      </if>
      <if test="checkComment != null" >
        check_comment,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ssdId != null" >
        #{ssdId,jdbcType=SMALLINT},
      </if>
      <if test="standardId != null" >
        #{standardId,jdbcType=VARCHAR},
      </if>
      <if test="standardName != null" >
        #{standardName,jdbcType=VARCHAR},
      </if>
      <if test="designer != null" >
        #{designer,jdbcType=VARCHAR},
      </if>
      <if test="register != null" >
        #{register,jdbcType=VARCHAR},
      </if>
      <if test="checker != null" >
        #{checker,jdbcType=VARCHAR},
      </if>
      <if test="changer != null" >
        #{changer,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="changeTime != null" >
        #{changeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="salarySum != null" >
        #{salarySum,jdbcType=DOUBLE},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=SMALLINT},
      </if>
      <if test="changeStatus != null" >
        #{changeStatus,jdbcType=SMALLINT},
      </if>
      <if test="checkComment != null" >
        #{checkComment,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.java158.hr.entity.SalaryStandardExample" resultType="java.lang.Integer" >
    select count(*) from salary_standard
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update salary_standard
    <set >
      <if test="record.ssdId != null" >
        ssd_id = #{record.ssdId,jdbcType=SMALLINT},
      </if>
      <if test="record.standardId != null" >
        standard_id = #{record.standardId,jdbcType=VARCHAR},
      </if>
      <if test="record.standardName != null" >
        standard_name = #{record.standardName,jdbcType=VARCHAR},
      </if>
      <if test="record.designer != null" >
        designer = #{record.designer,jdbcType=VARCHAR},
      </if>
      <if test="record.register != null" >
        register = #{record.register,jdbcType=VARCHAR},
      </if>
      <if test="record.checker != null" >
        checker = #{record.checker,jdbcType=VARCHAR},
      </if>
      <if test="record.changer != null" >
        changer = #{record.changer,jdbcType=VARCHAR},
      </if>
      <if test="record.registTime != null" >
        regist_time = #{record.registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkTime != null" >
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changeTime != null" >
        change_time = #{record.changeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.salarySum != null" >
        salary_sum = #{record.salarySum,jdbcType=DOUBLE},
      </if>
      <if test="record.checkStatus != null" >
        check_status = #{record.checkStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.changeStatus != null" >
        change_status = #{record.changeStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.checkComment != null" >
        check_comment = #{record.checkComment,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update salary_standard
    set ssd_id = #{record.ssdId,jdbcType=SMALLINT},
      standard_id = #{record.standardId,jdbcType=VARCHAR},
      standard_name = #{record.standardName,jdbcType=VARCHAR},
      designer = #{record.designer,jdbcType=VARCHAR},
      register = #{record.register,jdbcType=VARCHAR},
      checker = #{record.checker,jdbcType=VARCHAR},
      changer = #{record.changer,jdbcType=VARCHAR},
      regist_time = #{record.registTime,jdbcType=TIMESTAMP},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      change_time = #{record.changeTime,jdbcType=TIMESTAMP},
      salary_sum = #{record.salarySum,jdbcType=DOUBLE},
      check_status = #{record.checkStatus,jdbcType=SMALLINT},
      change_status = #{record.changeStatus,jdbcType=SMALLINT},
      check_comment = #{record.checkComment,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update salary_standard
    set ssd_id = #{record.ssdId,jdbcType=SMALLINT},
      standard_id = #{record.standardId,jdbcType=VARCHAR},
      standard_name = #{record.standardName,jdbcType=VARCHAR},
      designer = #{record.designer,jdbcType=VARCHAR},
      register = #{record.register,jdbcType=VARCHAR},
      checker = #{record.checker,jdbcType=VARCHAR},
      changer = #{record.changer,jdbcType=VARCHAR},
      regist_time = #{record.registTime,jdbcType=TIMESTAMP},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      change_time = #{record.changeTime,jdbcType=TIMESTAMP},
      salary_sum = #{record.salarySum,jdbcType=DOUBLE},
      check_status = #{record.checkStatus,jdbcType=SMALLINT},
      change_status = #{record.changeStatus,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.java158.hr.entity.SalaryStandardWithBLOBs" >
    update salary_standard
    <set >
      <if test="standardId != null" >
        standard_id = #{standardId,jdbcType=VARCHAR},
      </if>
      <if test="standardName != null" >
        standard_name = #{standardName,jdbcType=VARCHAR},
      </if>
      <if test="designer != null" >
        designer = #{designer,jdbcType=VARCHAR},
      </if>
      <if test="register != null" >
        register = #{register,jdbcType=VARCHAR},
      </if>
      <if test="checker != null" >
        checker = #{checker,jdbcType=VARCHAR},
      </if>
      <if test="changer != null" >
        changer = #{changer,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        regist_time = #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkTime != null" >
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="changeTime != null" >
        change_time = #{changeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="salarySum != null" >
        salary_sum = #{salarySum,jdbcType=DOUBLE},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=SMALLINT},
      </if>
      <if test="changeStatus != null" >
        change_status = #{changeStatus,jdbcType=SMALLINT},
      </if>
      <if test="checkComment != null" >
        check_comment = #{checkComment,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ssd_id = #{ssdId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.java158.hr.entity.SalaryStandardWithBLOBs" >
    update salary_standard
    set standard_id = #{standardId,jdbcType=VARCHAR},
      standard_name = #{standardName,jdbcType=VARCHAR},
      designer = #{designer,jdbcType=VARCHAR},
      register = #{register,jdbcType=VARCHAR},
      checker = #{checker,jdbcType=VARCHAR},
      changer = #{changer,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=TIMESTAMP},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      change_time = #{changeTime,jdbcType=TIMESTAMP},
      salary_sum = #{salarySum,jdbcType=DOUBLE},
      check_status = #{checkStatus,jdbcType=SMALLINT},
      change_status = #{changeStatus,jdbcType=SMALLINT},
      check_comment = #{checkComment,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where ssd_id = #{ssdId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.java158.hr.entity.SalaryStandard" >
    update salary_standard
    set standard_id = #{standardId,jdbcType=VARCHAR},
      standard_name = #{standardName,jdbcType=VARCHAR},
      designer = #{designer,jdbcType=VARCHAR},
      register = #{register,jdbcType=VARCHAR},
      checker = #{checker,jdbcType=VARCHAR},
      changer = #{changer,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=TIMESTAMP},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      change_time = #{changeTime,jdbcType=TIMESTAMP},
      salary_sum = #{salarySum,jdbcType=DOUBLE},
      check_status = #{checkStatus,jdbcType=SMALLINT},
      change_status = #{changeStatus,jdbcType=SMALLINT}
    where ssd_id = #{ssdId,jdbcType=SMALLINT}
  </update>
</mapper>